org: peerkatserverless
app: python-serverless-xls20
service: python-serverless-v2

frameworkVersion: '3'

useDotenv: true

provider:
  name: aws
  region: eu-west-2
  iam:
    role: arn:aws:iam::366877760811:role/lambda-role-peerkat-nft-data-serverless
  runtime: python3.8
  layers:
    - arn:aws:lambda:eu-west-2:770693421928:layer:Klayers-p38-pandas:10
  architecture: x86_64

package:
  patterns:
    - '!venv/**'
    - '!data/**'
    - '!node_modules/**'
    - '!.flake8'
    - '!.gitignore'
    - '!Makefile'
    - '!*.json'
    - '!*.csv'
    - '!*.js'
    - '!example.py'
    - '!README.md'
    - '!pyproject.toml'
    - '!requirements-dev.txt'
    - '!env.example'
    - '!env.local'
    - '!logger.log'

functions:
#  issuers-nft-dumps:
#    handler: handlers.issuers_nft_dumps
#    events:
#      # Invoke Lambda function every hour
#      - schedule: rate(1 hour)
#    timeout: 900
  issuers-nft-dump:
    handler: handlers.issuers_nft_dumps
    name: issuers-nft-dump-${sls:stage}
    timeout: 900
  issuers-taxon-dump:
    handler: handlers.issuers_taxon_dumps
    name: issuers-taxon-dump-${sls:stage}
    timeout: 900

stepFunctions:
  stateMachines:
    IssuersNFTDataDump:
      name: IssuersNFTDataDump${sls:stage}
      definition:
        StartAt: NFTDumps
        States:
#          NFTDumps:
#            Type: Task
#            Resource:
#              Fn::GetAtt: [ price, Arn ]
#            Next: JsonDumps
          NFTDumps:
            Type: Parallel
            End: true
            Branches:
              - StartAt: IssuerNFTDumps
                States:
                  IssuerNFTDumps:
                    Type: Task
                    Resource:
                      Fn::GetAtt: [ issuers-nft-dump, Arn ]
                    End: true
              - StartAt: IssuerTaxonDumps
                States:
                  IssuerTaxonDumps:
                    Type: Task
                    Resource:
                      Fn::GetAtt: [ issuers-taxon-dump, Arn ]
                    End: true
#              - StartAt: Table
#                States:
#                  Table:
#                    Type: Task
#                    Resource:
#                      Fn::GetAtt: [ table, Arn ]
#                    End: true
      events:
        - schedule: rate(1 hour)
#        - eventBridge:
#            event:
#              source:
#                - aws.s3
#              detail-type:
#                - Object Created
#              detail:
#                bucket:
#                  name:
#                    - peerkat-data-dumps-raw

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
  - serverless-step-functions